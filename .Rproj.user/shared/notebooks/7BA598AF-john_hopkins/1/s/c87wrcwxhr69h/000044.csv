"0","confirmed_cases_long_bycountry[,NewCasesMAProp:=NewCasesMA/Population2016]"
"0","new_cases<-confirmed_cases_long_bycountry[!is.na(NewCasesMA)]"
"0","case_limit<-40"
"0","days_limit <- 21"
"0","nc_bypop_display<-new_cases[Population2016>10^5]#only countries with more than 100,000 people."
"0","#now we want a list of the lines"
"0","#with an x axis point either at the end of the graph,"
"0","#or at the end of the line, whichever is first,     "
"0","country_labels<-nc_bypop_display[,"
"0","                              .(intercept_date=max(case_date)),"
"0","                              by=`Country/Region`] %>% "
"0"," merge(nc_bypop_display[,.(`Country/Region`,case_date,NewCasesMAProp)],"
"0","                     by.x=c(""Country/Region"",""intercept_date""),"
"0","                     by.y=c(""Country/Region"",""case_date""),"
"0","       all.x=TRUE,all.y=FALSE)"
"0","country_labels[,NewCasesGroup:=round(log(NewCasesMAProp,10),5)]"
"0","cl_grouped_nc_prop<- country_labels[,"
"0","                                        .(Countries=paste0(`Country/Region`, collapse="", ""),"
"0","                                          GroupedNewCases=mean(NewCasesMAProp),"
"0","                                          `Country/Region` = .SD[,`Country/Region`][[1]]"
"0","                                          )"
"0","                                        ,by=.(NewCasesGroup,intercept_date)]"
"0","x_breaks  <- seq(min(nc_bypop_display$case_date),max(nc_bypop_display$case_date),7)"
"0","myplot<-ggplot(nc_bypop_display"
"0","      ,"
"0","      aes(x=as.Date(case_date),y=NewCasesMAProp,color=`Country/Region`,"
"0","          group=`Country/Region`))+"
"0"," geom_line(size=1,alpha=0.5)+"
"0","  theme_classic()+"
"0"," #geom_point(alpha=0.5)+"
"0"," scale_x_date(#breaks=x_breaks,"
"0","   date_breaks = ""7 days"","
"0","                    minor_breaks=NULL,date_labels=""%b %d"")+"
"0"," coord_cartesian(xlim=c(max(nc_bypop_display$case_date)-21,max(nc_bypop_display$case_date)+3),"
"0","                 ylim=c(10e-7,max(nc_bypop_display$NewCasesMAProp)*2)"
"0","                 )+"
"0"," scale_y_continuous(trans = ""log10"","
"0","                    breaks = rep(c(2,5,10),5)*rep(10^seq(-9,-9+5-1,1),each=3),"
"0","                    minor_breaks=NULL,"
"0","                    labels = function(x){paste0(""1 per "", scales::comma(1/x))},"
"0","                    sec.axis = dup_axis())+"
"0"," #geom_vline(xintercept = 0,linetype=""dashed"")+"
"0"," #geom_hline(yintercept = threshold,,linetype=""dashed"")+"
"0"," labs(title=paste0(""New confirmed cases by day and country""),"
"0","      x=paste0(""Date""),"
"0","      y=""New Cases (7 day rolling average)"","
"0","      color=""Date Country Reached Threshold"","
"0","      caption=""Countries of over 100 thousand people reported.\n Source: John Hopkins Dataset.\n http://github.com/bjsmith @curiouskiwicat benjsmith.shinyapps.io/john_hopkins/"")+"
"0"," theme(legend.position = ""none"")+"
"0"," geom_text(data=cl_grouped_nc_prop,"
"0","           aes(x=intercept_date,y=GroupedNewCases,label=Countries),"
"0","           hjust=0,size=2,fontface=""bold"")"
"0","#htmlwidgets::saveWidget(as_widget(ggplotly(myplot)),""nc_bypop_display"",selfcontained=FALSE)"
"0","  "
"0","myplot"
