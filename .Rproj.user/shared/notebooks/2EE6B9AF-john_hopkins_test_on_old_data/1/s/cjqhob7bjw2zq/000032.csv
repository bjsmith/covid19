"0","    threshold<-50"
"0","     "
"0","     #mark which days have reached the threshold"
"0","     confirmed_cases_long_bycountry[,IsAtOrPastThreshold:=(`Confirmed Cases`>=threshold)]"
"0","     "
"0","     #identify the first day for each country that has reached the threshold"
"0","     confirmed_cases_long_bycountry[,"
"0","                                    DatePastThreshold:=min(.SD[IsAtOrPastThreshold==TRUE,case_date]),"
"0","                                    by=`Country/Region`]"
"2","no non-missing arguments to min; returning Inf"
"2","no non-missing arguments to min; returning Inf"
"2","no non-missing arguments to min; returning Inf"
"2","no non-missing arguments to min; returning Inf"
"2","no non-missing arguments to min; returning Inf"
"2","no non-missing arguments to min; returning Inf"
"2","no non-missing arguments to min; returning Inf"
"2","no non-missing arguments to min; returning Inf"
"2","no non-missing arguments to min; returning Inf"
"2","no non-missing arguments to min; returning Inf"
"2","no non-missing arguments to min; returning Inf"
"2","no non-missing arguments to min; returning Inf"
"2","no non-missing arguments to min; returning Inf"
"2","no non-missing arguments to min; returning Inf"
"2","no non-missing arguments to min; returning Inf"
"2","no non-missing arguments to min; returning Inf"
"2","no non-missing arguments to min; returning Inf"
"2","no non-missing arguments to min; returning Inf"
"2","no non-missing arguments to min; returning Inf"
"2","no non-missing arguments to min; returning Inf"
"2","no non-missing arguments to min; returning Inf"
"2","no non-missing arguments to min; returning Inf"
"2","no non-missing arguments to min; returning Inf"
"2","no non-missing arguments to min; returning Inf"
"2","no non-missing arguments to min; returning Inf"
"2","no non-missing arguments to min; returning Inf"
"2","no non-missing arguments to min; returning Inf"
"2","no non-missing arguments to min; returning Inf"
"2","no non-missing arguments to min; returning Inf"
"2","no non-missing arguments to min; returning Inf"
"2","no non-missing arguments to min; returning Inf"
"2","no non-missing arguments to min; returning Inf"
"2","no non-missing arguments to min; returning Inf"
"2","no non-missing arguments to min; returning Inf"
"2","no non-missing arguments to min; returning Inf"
"2","no non-missing arguments to min; returning Inf"
"2","no non-missing arguments to min; returning Inf"
"2","no non-missing arguments to min; returning Inf"
"2","no non-missing arguments to min; returning Inf"
"2","no non-missing arguments to min; returning Inf"
"2","no non-missing arguments to min; returning Inf"
"2","no non-missing arguments to min; returning Inf"
"2","no non-missing arguments to min; returning Inf"
"2","no non-missing arguments to min; returning Inf"
"2","no non-missing arguments to min; returning Inf"
"2","no non-missing arguments to min; returning Inf"
"2","no non-missing arguments to min; returning Inf"
"2","no non-missing arguments to min; returning Inf"
"2","no non-missing arguments to min; returning Inf"
"2","no non-missing arguments to min; returning Inf"
"2","no non-missing arguments to min; returning Inf"
"2","no non-missing arguments to min; returning Inf"
"2","no non-missing arguments to min; returning Inf"
"2","no non-missing arguments to min; returning Inf"
"2","no non-missing arguments to min; returning Inf"
"2","no non-missing arguments to min; returning Inf"
"2","no non-missing arguments to min; returning Inf"
"2","no non-missing arguments to min; returning Inf"
"2","no non-missing arguments to min; returning Inf"
"2","no non-missing arguments to min; returning Inf"
"2","no non-missing arguments to min; returning Inf"
"2","no non-missing arguments to min; returning Inf"
"2","no non-missing arguments to min; returning Inf"
"2","no non-missing arguments to min; returning Inf"
"2","no non-missing arguments to min; returning Inf"
"2","no non-missing arguments to min; returning Inf"
"2","no non-missing arguments to min; returning Inf"
"2","no non-missing arguments to min; returning Inf"
"2","no non-missing arguments to min; returning Inf"
"2","no non-missing arguments to min; returning Inf"
"2","no non-missing arguments to min; returning Inf"
"2","no non-missing arguments to min; returning Inf"
"2","no non-missing arguments to min; returning Inf"
"2","no non-missing arguments to min; returning Inf"
"2","no non-missing arguments to min; returning Inf"
"2","no non-missing arguments to min; returning Inf"
"2","no non-missing arguments to min; returning Inf"
"2","no non-missing arguments to min; returning Inf"
"2","no non-missing arguments to min; returning Inf"
"2","no non-missing arguments to min; returning Inf"
"2","no non-missing arguments to min; returning Inf"
"2","no non-missing arguments to min; returning Inf"
"2","no non-missing arguments to min; returning Inf"
"2","no non-missing arguments to min; returning Inf"
"2","no non-missing arguments to min; returning Inf"
"2","no non-missing arguments to min; returning Inf"
"2","no non-missing arguments to min; returning Inf"
"2","no non-missing arguments to min; returning Inf"
"2","no non-missing arguments to min; returning Inf"
"2","no non-missing arguments to min; returning Inf"
"2","no non-missing arguments to min; returning Inf"
"2","no non-missing arguments to min; returning Inf"
"2","no non-missing arguments to min; returning Inf"
"2","no non-missing arguments to min; returning Inf"
"2","no non-missing arguments to min; returning Inf"
"2","no non-missing arguments to min; returning Inf"
"2","no non-missing arguments to min; returning Inf"
"2","no non-missing arguments to min; returning Inf"
"0","     "
"0","     #then calculate the date relative to the threshold"
"0","     confirmed_cases_long_bycountry[,DaysPastThreshold:=as.integer(case_date-DatePastThreshold)]"
"2","NAs introduced by coercion to integer range"
"0","     "
"0","      confirmed_graph<-confirmed_cases_long_bycountry"
"0","     #Remove China if it was above the threshold on the first day. we don't do this to any other countries"
"0","     #but China is further along than all others."
"0","     if(threshold<min(confirmed_graph[`Country/Region`==""China"",`Confirmed Cases`])){"
"0","       confirmed_graph <- "
"0","         confirmed_graph[`Country/Region`!=""China""]"
"0","     }"
"0","     "
"0","     "
"0","     case_limit<-40"
"0","     days_limit <- 21"
"0","     #now we want a list of the lines"
"0","     #with an x axis point either at the end of the graph,"
"0","     #or at the end of the line, whichever is first,     "
"0","     country_labels<-confirmed_graph[,"
"0","                                    .(intercept_day=min(days_limit,max(DaysPastThreshold))),"
"0","                                    by=`Country/Region`] %>% .[!is.na(intercept_day)] %>%"
"0","       #and then at that x-axis point, we want the y-axis point.  "
"0","       merge(confirmed_graph[,.(`Country/Region`,DaysPastThreshold,`Confirmed Cases`,DatePastThreshold)],"
"0","                           by.x=c(""Country/Region"",""intercept_day""),"
"0","                           by.y=c(""Country/Region"",""DaysPastThreshold""),"
"0","             all.x=TRUE,all.y=FALSE)"
"0"," "
"0","     x_breaks  <- seq(-7,days_limit,7)"
"0","     x_labels <- c(paste(abs(x_breaks[1]),""Days Before""),"
"0","                   x_breaks[2:(length(x_breaks)-1)],"
"0","                   paste(x_breaks[length(x_breaks)],""Days After""))"
"0","     myplot<-ggplot(confirmed_graph"
"0","            # [`Country/Region` %in%"
"0","            #                                  c(""New Zealand"",""Australia"","
"0","            #                                    ""Canada"",""Denmark"",""Singapore"","
"0","            #                                    ""Hong Kong"",""US"")]"
"0","            ,"
"0","            aes(x=DaysPastThreshold,y=`Confirmed Cases`,"
"0","                group=`Country/Region`,color=DatePastThreshold))+"
"0","       geom_line(size=1,alpha=0.3)+"
"0","       #geom_point(alpha=0.5)+"
"0","       scale_x_continuous(limits=c(-7,days_limit),"
"0","                          breaks=x_breaks,"
"0","                          labels = x_labels)+"
"0","       coord_cartesian(xlim=c(-7,days_limit+3))+"
"0","       scale_y_continuous(trans = ""log10"","
"0","                          breaks = c(1,2,5,10,20,50,100,200,500,1000,2000,5000,10000,20000,50000,100000),"
"0","                          minor_breaks=NULL,"
"0","                          labels = scales::comma,"
"0","                          sec.axis = dup_axis())+"
"0","       geom_vline(xintercept = 0,linetype=""dashed"")+"
"0","       #geom_hline(yintercept = threshold,,linetype=""dashed"")+"
"0","       labs(title=paste0(""Growth in cases by day from the "",threshold,"" case mark, by country""),"
"0","            x=paste0(""Days past first day with "",threshold,"" cases""),"
"0","            y=""Total confirmed cases"","
"0","            color=""Date Country Reached Threshold"")+"
"0","       theme(legend.position = ""none"")+"
"0","       geom_text(data=country_labels,"
"0","                 aes(x=intercept_day,y=`Confirmed Cases`,label=`Country/Region`),"
"0","                 hjust=0,size=2,fontface=""bold"")"
"0","  "
"0","  myplot"
